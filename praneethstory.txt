this is my story.
This is line in added on 23rd july to check the VCS.
This is line on text is added to verify the new branch.
-----------------
7/26/2023
Today I learned how to:
ensure your local(main) copy is up-to date - "git pull origin main"
create a new copy branch from main - "git branch pdendi_personal"
switch to new branch - "git checkout pdendi_personal" or "git switch pdendi_personal"
commit your changes - "git add *" and "git commit -m "new branch created i.e pdendi_personal""
push the new branch to GitHub - "git push origin pdendi_personal"
--------------------------
7/27/2023
git branch -m feature-branch new-feature-branch - to rename the branch
git push origin -u new-branch-name - to push the new branch name to github.
----------------------------
8/2/2023
if there is an error message like :(
On branch main
Your branch is ahead of 'origin/main' by 4 commits.
  (use "git push" to publish your local commits)

solution: git push origin main
*******
If I am not sure with changes and leads to merge conflict:
If an error occurred while using "git pull"

Steps:
	-> git reset --hard HEAD
	-> git branch -a
    -> git rebase origin/mainline
*******
if there is an error message in another branch like this::

PS C:\Users\dendi\Documents\git_practice\practice_gitcommands_withgithub> git status
On branch pdendi_personal
nothing to commit, working tree clean
PS C:\Users\dendi\Documents\git_practice\practice_gitcommands_withgithub> git push
fatal: The current branch pdendi_personal has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin pdendi_personal

To have this happen automatically for branches without a tracking
upstream, see 'push.autoSetupRemote' in 'git help config'.

solution: git push --set-upstream origin pdendi_personal
-------------------------------------------
ALl about git diff command::
git diff - to check what are the changes in the current branch OR
git diff HEAD - lists all changes in the working tree since your last commit
git diff --staged or git diff --cached - list the changes between the staging area and our last commit
